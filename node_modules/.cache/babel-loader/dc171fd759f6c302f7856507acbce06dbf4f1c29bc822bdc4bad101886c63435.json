{"ast":null,"code":"var _jsxFileName = \"/Users/veronicapuddu/Downloads/React-flow-edit-node-youtube-main/src/DragDrop/DnDFlow.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useCallback } from 'react';\nimport ReactFlow, { Edge, ReactFlowProvider, addEdge, useNodesState, useEdgesState, Controls, Background } from 'reactflow';\nimport 'reactflow/dist/style.css';\nimport Sidebar from './sidebar'; // Assicurati che questo sia corretto\n\nimport './style.css';\nimport CustomNode from '../CustomNodes/CustomNode';\n\n// Componente per il nodo personalizzato\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst nodeTypes = {\n  customNode: CustomNode\n};\nlet id = 0;\nconst getId = () => `dndnode_${id++}`;\nconst DnDFlow = () => {\n  _s();\n  const reactFlowWrapper = useRef(null);\n  const [nodes, setNodes, onNodesChange] = useNodesState([]);\n  const [edges, setEdges, onEdgesChange] = useEdgesState([]);\n  const [reactFlowInstance, setReactFlowInstance] = useState(null);\n  const [variant, setVariant] = useState('Lines');\n  const [editValue, setEditValue] = useState(nodes.data);\n  const [id, setId] = useState();\n  const onNodeClick = (e, val) => {\n    setEditValue(val.data.label);\n    setId(val.id);\n  };\n  const handleChange = e => {\n    e.preventDefault();\n    setEditValue(e.target.value);\n  };\n  const handleEdit = () => {\n    const res = nodes.map(item => {\n      if (item.id === id) {\n        item.data = {\n          ...item.data,\n          label: editValue\n        };\n      }\n      return item;\n    });\n    setNodes(res);\n    setEditValue('');\n  };\n  const onConnect = useCallback(params => setEdges(eds => addEdge(params, eds)), []);\n  const onDragOver = useCallback(event => {\n    event.preventDefault();\n    event.dataTransfer.dropEffect = 'move';\n  }, []);\n  const onDrop = useCallback(event => {\n    event.preventDefault();\n    const reactFlowBounds = reactFlowWrapper.current.getBoundingClientRect();\n    const nodeData = JSON.parse(event.dataTransfer.getData('application/reactflow'));\n\n    // Check if the dropped element is valid\n    if (!nodeData) {\n      return;\n    }\n    const position = reactFlowInstance.project({\n      x: event.clientX - reactFlowBounds.left,\n      y: event.clientY - reactFlowBounds.top\n    });\n    const newNode = {\n      id: getId(),\n      type: 'customNode',\n      // Usa un tipo di nodo personalizzato\n      position,\n      data: {\n        label: nodeData.name || `${nodeData.type} node`,\n        image: nodeData.image,\n        notes: nodeData.notes,\n        nodeType: nodeData.type\n      }\n    };\n    setNodes(nds => nds.concat(newNode));\n  }, [reactFlowInstance]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dndflow\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"updatenode__controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Label:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 30\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: editValue,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 73\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleEdit,\n        className: \"btn\",\n        children: \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ReactFlowProvider, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"reactflow-wrapper\",\n        ref: reactFlowWrapper,\n        children: /*#__PURE__*/_jsxDEV(ReactFlow, {\n          nodes: nodes,\n          edges: edges,\n          onNodeClick: onNodeClick,\n          onNodesChange: onNodesChange,\n          onEdgesChange: onEdgesChange,\n          onConnect: onConnect,\n          onInit: setReactFlowInstance,\n          onDrop: onDrop,\n          onDragOver: onDragOver,\n          fitView: true,\n          nodeTypes: nodeTypes // Registriamo il tipo di nodo personalizzato\n          ,\n          children: [/*#__PURE__*/_jsxDEV(Background, {\n            color: \"#99b3ec\",\n            variant: variant\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Controls, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n};\n_s(DnDFlow, \"RTU0yyrks6vtLuGZmo59k0gWQ9E=\", false, function () {\n  return [useNodesState, useEdgesState];\n});\n_c = DnDFlow;\nexport default DnDFlow;\nvar _c;\n$RefreshReg$(_c, \"DnDFlow\");","map":{"version":3,"names":["React","useState","useRef","useCallback","ReactFlow","Edge","ReactFlowProvider","addEdge","useNodesState","useEdgesState","Controls","Background","Sidebar","CustomNode","jsxDEV","_jsxDEV","nodeTypes","customNode","id","getId","DnDFlow","_s","reactFlowWrapper","nodes","setNodes","onNodesChange","edges","setEdges","onEdgesChange","reactFlowInstance","setReactFlowInstance","variant","setVariant","editValue","setEditValue","data","setId","onNodeClick","e","val","label","handleChange","preventDefault","target","value","handleEdit","res","map","item","onConnect","params","eds","onDragOver","event","dataTransfer","dropEffect","onDrop","reactFlowBounds","current","getBoundingClientRect","nodeData","JSON","parse","getData","position","project","x","clientX","left","y","clientY","top","newNode","type","name","image","notes","nodeType","nds","concat","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","onClick","ref","onInit","fitView","color","_c","$RefreshReg$"],"sources":["/Users/veronicapuddu/Downloads/React-flow-edit-node-youtube-main/src/DragDrop/DnDFlow.js"],"sourcesContent":["import React, { useState, useRef, useCallback } from 'react';\r\nimport ReactFlow, {\r\n  Edge,\r\n  ReactFlowProvider,\r\n  addEdge,\r\n  useNodesState,\r\n  useEdgesState,\r\n  Controls,\r\n  Background\r\n} from 'reactflow';\r\nimport 'reactflow/dist/style.css';\r\nimport Sidebar from './sidebar'; // Assicurati che questo sia corretto\r\n\r\nimport './style.css';\r\nimport CustomNode from '../CustomNodes/CustomNode';\r\n\r\n// Componente per il nodo personalizzato\r\nconst nodeTypes = {\r\n  customNode: CustomNode,\r\n};\r\n\r\nlet id = 0;\r\nconst getId = () => `dndnode_${id++}`;\r\n\r\nconst DnDFlow = () => {\r\n  const reactFlowWrapper = useRef(null);\r\n  const [nodes, setNodes, onNodesChange] = useNodesState([]);\r\n  const [edges, setEdges, onEdgesChange] = useEdgesState([]);\r\n  const [reactFlowInstance, setReactFlowInstance] = useState(null);\r\n  const [variant, setVariant] = useState('Lines');\r\n  const [editValue, setEditValue] = useState(nodes.data);\r\n  const [id, setId] = useState();\r\n\r\n  const onNodeClick = (e, val) => {\r\n    setEditValue(val.data.label);\r\n    setId(val.id);\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    e.preventDefault();\r\n    setEditValue(e.target.value);\r\n  };\r\n\r\n  const handleEdit = () => {\r\n    const res = nodes.map((item) => {\r\n      if (item.id === id) {\r\n        item.data = {\r\n          ...item.data,\r\n          label: editValue,\r\n        };\r\n      }\r\n      return item;\r\n    });\r\n    setNodes(res);\r\n    setEditValue('');\r\n  };\r\n\r\n  const onConnect = useCallback((params) => setEdges((eds) => addEdge(params, eds)), []);\r\n\r\n  const onDragOver = useCallback((event) => {\r\n    event.preventDefault();\r\n    event.dataTransfer.dropEffect = 'move';\r\n  }, []);\r\n\r\n  const onDrop = useCallback(\r\n    (event) => {\r\n      event.preventDefault();\r\n\r\n      const reactFlowBounds = reactFlowWrapper.current.getBoundingClientRect();\r\n      const nodeData = JSON.parse(event.dataTransfer.getData('application/reactflow'));\r\n\r\n      // Check if the dropped element is valid\r\n      if (!nodeData) {\r\n        return;\r\n      }\r\n\r\n      const position = reactFlowInstance.project({\r\n        x: event.clientX - reactFlowBounds.left,\r\n        y: event.clientY - reactFlowBounds.top,\r\n      });\r\n\r\n      const newNode = {\r\n        id: getId(),\r\n        type: 'customNode', // Usa un tipo di nodo personalizzato\r\n        position,\r\n        data: {\r\n          label: nodeData.name || `${nodeData.type} node`,\r\n          image: nodeData.image,\r\n          notes: nodeData.notes,\r\n          nodeType: nodeData.type,\r\n        },\r\n      };\r\n\r\n      setNodes((nds) => nds.concat(newNode));\r\n    },\r\n    [reactFlowInstance]\r\n  );\r\n\r\n  return (\r\n    <div className=\"dndflow\">\r\n      <div className=\"updatenode__controls\">\r\n        <label>Label:</label><br />\r\n        <input type=\"text\" value={editValue} onChange={handleChange} /> <br />\r\n        <button onClick={handleEdit} className=\"btn\">Update</button>\r\n      </div>\r\n\r\n      <ReactFlowProvider>\r\n        <div className=\"reactflow-wrapper\" ref={reactFlowWrapper}>\r\n          <ReactFlow\r\n            nodes={nodes}\r\n            edges={edges}\r\n            onNodeClick={onNodeClick}\r\n            onNodesChange={onNodesChange}\r\n            onEdgesChange={onEdgesChange}\r\n            onConnect={onConnect}\r\n            onInit={setReactFlowInstance}\r\n            onDrop={onDrop}\r\n            onDragOver={onDragOver}\r\n            fitView\r\n            nodeTypes={nodeTypes} // Registriamo il tipo di nodo personalizzato\r\n          >\r\n            <Background color=\"#99b3ec\" variant={variant} />\r\n            <Controls />\r\n          </ReactFlow>\r\n        </div>\r\n        <Sidebar />\r\n      </ReactFlowProvider>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DnDFlow;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}