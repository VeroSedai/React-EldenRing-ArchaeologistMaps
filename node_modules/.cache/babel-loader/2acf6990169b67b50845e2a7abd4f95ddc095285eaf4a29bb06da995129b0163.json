{"ast":null,"code":"var _jsxFileName = \"/Users/veronicapuddu/Downloads/React-flow-edit-node-youtube-main/src/DragDrop/sidebar.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { GraphQLClient, gql } from 'graphql-request';\nimport Autocomplete from 'react-autocomplete';\nimport './style.css'; // Importa il file CSS\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst client = new GraphQLClient('https://eldenring.fanapis.com/api/graphql');\n\n// Definisci le query dinamiche per diversi tipi di oggetti\nconst QUERIES = {\n  weapon: gql`\n    query SearchItems($name: String!) {\n      weapon(name: $name) {\n        id\n        name\n        image\n        description\n      }\n    }\n  `,\n  shield: gql`\n    query SearchItems($name: String!) {\n      shield(name: $name) {\n        id\n        name\n        image\n        description\n      }\n    }\n  `,\n  npc: gql`\n    query SearchItems($name: String!) {\n      npc(name: $name) {\n        id\n        name\n        image\n        description\n      }\n    }\n  `,\n  armor: gql`\n    query SearchItems($name: String!) {\n      armor(name: $name) {\n        id\n        name\n        image\n        description\n      }\n    }\n  `,\n  boss: gql`\n    query SearchItems($name: String!) {\n      bosses(name: $name) {\n        id\n        name\n        image\n        description\n      }\n    }\n  `\n};\nconst Sidebar = ({\n  onUpdateNode\n}) => {\n  _s();\n  // Aggiungi onUpdateNode come props\n  const [searchValue, setSearchValue] = useState('');\n  const [suggestions, setSuggestions] = useState([]);\n  const [selectedItem, setSelectedItem] = useState(null);\n  const [itemType, setItemType] = useState('weapon'); // Default type\n  const [nodeType, setNodeType] = useState('default'); // Default come tipo iniziale\n  const [nodeName, setNodeName] = useState('');\n  const [nodeImage, setNodeImage] = useState('');\n  const [nodeDescription, setNodeDescription] = useState('');\n  const [nodeNotes, setNodeNotes] = useState('');\n  const onDragStart = event => {\n    const nodeData = {\n      type: nodeType,\n      name: nodeName,\n      image: nodeImage,\n      description: nodeDescription,\n      notes: nodeNotes\n    };\n    event.dataTransfer.setData('application/reactflow', JSON.stringify(nodeData));\n    event.dataTransfer.effectAllowed = 'move';\n  };\n  const fetchItems = async name => {\n    try {\n      const response = await client.request(QUERIES[itemType], {\n        name\n      });\n      const results = response[`${itemType}`].map(item => item.name); // Solo i nomi\n      setSuggestions([...new Set(results)]); // Rimuovi duplicati\n    } catch (error) {\n      console.error('Errore nel recupero dei dati:', error);\n    }\n  };\n  const handleInputChange = e => {\n    const value = e.target.value;\n    setSearchValue(value);\n    if (value.length > 2) {\n      fetchItems(value);\n    }\n  };\n  const handleSelect = val => {\n    const selected = suggestions.find(item => item === val);\n    setSelectedItem(selected);\n    setSearchValue(val);\n\n    // Imposta i campi con i dati selezionati se sono vuoti\n    if (!nodeName) setNodeName(selected.name);\n    if (!nodeImage) setNodeImage(selected.image);\n    if (!nodeDescription) setNodeDescription(selected.description);\n  };\n  const handleTypeChange = e => {\n    setItemType(e.target.value);\n    setSuggestions([]); // Resetta i suggerimenti\n    setSearchValue(''); // Resetta il valore di ricerca\n    setSelectedItem(null); // Resetta l'elemento selezionato\n  };\n  const handleUpdate = () => {\n    // Crea un oggetto nodo con i dati aggiornati\n    const updatedNodeData = {\n      name: nodeName,\n      image: nodeImage,\n      description: nodeDescription,\n      notes: nodeNotes,\n      type: nodeType\n    };\n    onUpdateNode(updatedNodeData); // Chiama la funzione di aggiornamento passata come props\n  };\n  return /*#__PURE__*/_jsxDEV(\"aside\", {\n    className: \"sidebar\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dropdown\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Item Type:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: itemType,\n        onChange: handleTypeChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"weapon\",\n          children: \"Weapon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"shield\",\n          children: \"Shield\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"npc\",\n          children: \"NPC\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"armor\",\n          children: \"Armor\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"boss\",\n          children: \"Boss\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"autocomplete\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Search Item:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Autocomplete, {\n        getItemValue: item => item,\n        items: suggestions,\n        renderItem: (item, isHighlighted) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `autocomplete-item ${isHighlighted ? 'highlighted' : ''}`,\n          children: item\n        }, item, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 13\n        }, this),\n        value: searchValue,\n        onChange: handleInputChange,\n        onSelect: handleSelect,\n        inputProps: {\n          className: 'autocomplete-input'\n        },\n        wrapperStyle: {\n          position: 'relative'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Node Name\",\n        value: nodeName,\n        onChange: e => setNodeName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Image URL\",\n        value: nodeImage,\n        onChange: e => setNodeImage(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Description\",\n        value: nodeDescription,\n        onChange: e => setNodeDescription(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Notes\",\n        value: nodeNotes,\n        onChange: e => setNodeNotes(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleUpdate,\n        className: \"btn-update\",\n        children: \"Update Node\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"description\",\n        children: \"You can drag these nodes to the pane on the right.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dropdown\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Node Type:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          onChange: e => setNodeType(e.target.value),\n          value: nodeType,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"input\",\n            children: \"Input Node\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"default\",\n            children: \"Default Node\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"output\",\n            children: \"Output Node\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dndnode\",\n        onDragStart: onDragStart,\n        draggable: true,\n        style: {\n          padding: \"10px\",\n          border: \"1px solid #ccc\",\n          margin: \"5px\",\n          cursor: \"grab\"\n        },\n        children: \"Custom Node\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 134,\n    columnNumber: 5\n  }, this);\n};\n_s(Sidebar, \"IkLG73kq0xnSVwLPPtpJuZ9oOsA=\");\n_c = Sidebar;\nexport default Sidebar;\nvar _c;\n$RefreshReg$(_c, \"Sidebar\");","map":{"version":3,"names":["React","useState","useEffect","GraphQLClient","gql","Autocomplete","jsxDEV","_jsxDEV","client","QUERIES","weapon","shield","npc","armor","boss","Sidebar","onUpdateNode","_s","searchValue","setSearchValue","suggestions","setSuggestions","selectedItem","setSelectedItem","itemType","setItemType","nodeType","setNodeType","nodeName","setNodeName","nodeImage","setNodeImage","nodeDescription","setNodeDescription","nodeNotes","setNodeNotes","onDragStart","event","nodeData","type","name","image","description","notes","dataTransfer","setData","JSON","stringify","effectAllowed","fetchItems","response","request","results","map","item","Set","error","console","handleInputChange","e","value","target","length","handleSelect","val","selected","find","handleTypeChange","handleUpdate","updatedNodeData","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","getItemValue","items","renderItem","isHighlighted","onSelect","inputProps","wrapperStyle","position","placeholder","onClick","draggable","style","padding","border","margin","cursor","_c","$RefreshReg$"],"sources":["/Users/veronicapuddu/Downloads/React-flow-edit-node-youtube-main/src/DragDrop/sidebar.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { GraphQLClient, gql } from 'graphql-request';\r\nimport Autocomplete from 'react-autocomplete';\r\nimport './style.css'; // Importa il file CSS\r\n\r\nconst client = new GraphQLClient('https://eldenring.fanapis.com/api/graphql');\r\n\r\n// Definisci le query dinamiche per diversi tipi di oggetti\r\nconst QUERIES = {\r\n  weapon: gql`\r\n    query SearchItems($name: String!) {\r\n      weapon(name: $name) {\r\n        id\r\n        name\r\n        image\r\n        description\r\n      }\r\n    }\r\n  `,\r\n  shield: gql`\r\n    query SearchItems($name: String!) {\r\n      shield(name: $name) {\r\n        id\r\n        name\r\n        image\r\n        description\r\n      }\r\n    }\r\n  `,\r\n  npc: gql`\r\n    query SearchItems($name: String!) {\r\n      npc(name: $name) {\r\n        id\r\n        name\r\n        image\r\n        description\r\n      }\r\n    }\r\n  `,\r\n  armor: gql`\r\n    query SearchItems($name: String!) {\r\n      armor(name: $name) {\r\n        id\r\n        name\r\n        image\r\n        description\r\n      }\r\n    }\r\n  `,\r\n  boss: gql`\r\n    query SearchItems($name: String!) {\r\n      bosses(name: $name) {\r\n        id\r\n        name\r\n        image\r\n        description\r\n      }\r\n    }\r\n  `,\r\n};\r\n\r\nconst Sidebar = ({ onUpdateNode }) => { // Aggiungi onUpdateNode come props\r\n  const [searchValue, setSearchValue] = useState('');\r\n  const [suggestions, setSuggestions] = useState([]);\r\n  const [selectedItem, setSelectedItem] = useState(null);\r\n  const [itemType, setItemType] = useState('weapon'); // Default type\r\n  const [nodeType, setNodeType] = useState('default'); // Default come tipo iniziale\r\n  const [nodeName, setNodeName] = useState('');\r\n  const [nodeImage, setNodeImage] = useState('');\r\n  const [nodeDescription, setNodeDescription] = useState('');\r\n  const [nodeNotes, setNodeNotes] = useState('');\r\n\r\n  const onDragStart = (event) => {\r\n    const nodeData = {\r\n      type: nodeType,\r\n      name: nodeName,\r\n      image: nodeImage,\r\n      description: nodeDescription,\r\n      notes: nodeNotes,\r\n    };\r\n    event.dataTransfer.setData('application/reactflow', JSON.stringify(nodeData));\r\n    event.dataTransfer.effectAllowed = 'move';\r\n  };\r\n\r\n  const fetchItems = async (name) => {\r\n    try {\r\n      const response = await client.request(QUERIES[itemType], { name });\r\n      const results = response[`${itemType}`].map(item => item.name); // Solo i nomi\r\n      setSuggestions([...new Set(results)]); // Rimuovi duplicati\r\n    } catch (error) {\r\n      console.error('Errore nel recupero dei dati:', error);\r\n    }\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    const value = e.target.value;\r\n    setSearchValue(value);\r\n    if (value.length > 2) {\r\n      fetchItems(value);\r\n    }\r\n  };\r\n\r\n  const handleSelect = (val) => {\r\n    const selected = suggestions.find((item) => item === val);\r\n    setSelectedItem(selected);\r\n    setSearchValue(val);\r\n    \r\n    // Imposta i campi con i dati selezionati se sono vuoti\r\n    if (!nodeName) setNodeName(selected.name);\r\n    if (!nodeImage) setNodeImage(selected.image);\r\n    if (!nodeDescription) setNodeDescription(selected.description);\r\n  };\r\n\r\n  const handleTypeChange = (e) => {\r\n    setItemType(e.target.value);\r\n    setSuggestions([]); // Resetta i suggerimenti\r\n    setSearchValue(''); // Resetta il valore di ricerca\r\n    setSelectedItem(null); // Resetta l'elemento selezionato\r\n  };\r\n\r\n  const handleUpdate = () => {\r\n    // Crea un oggetto nodo con i dati aggiornati\r\n    const updatedNodeData = {\r\n      name: nodeName,\r\n      image: nodeImage,\r\n      description: nodeDescription,\r\n      notes: nodeNotes,\r\n      type: nodeType,\r\n    };\r\n    onUpdateNode(updatedNodeData); // Chiama la funzione di aggiornamento passata come props\r\n  };\r\n\r\n  return (\r\n    <aside className=\"sidebar\">\r\n      {/* Dropdown per selezionare il tipo di oggetto */}\r\n      <div className=\"dropdown\">\r\n        <label>Item Type:</label>\r\n        <select value={itemType} onChange={handleTypeChange}>\r\n          <option value=\"weapon\">Weapon</option>\r\n          <option value=\"shield\">Shield</option>\r\n          <option value=\"npc\">NPC</option>\r\n          <option value=\"armor\">Armor</option>\r\n          <option value=\"boss\">Boss</option>\r\n        </select>\r\n      </div>\r\n\r\n      {/* Campo di autocompletamento */}\r\n      <div className=\"autocomplete\">\r\n        <label>Search Item:</label>\r\n        <Autocomplete\r\n          getItemValue={(item) => item}\r\n          items={suggestions}\r\n          renderItem={(item, isHighlighted) => (\r\n            <div\r\n              key={item}\r\n              className={`autocomplete-item ${isHighlighted ? 'highlighted' : ''}`}\r\n            >\r\n              {item}\r\n            </div>\r\n          )}\r\n          value={searchValue}\r\n          onChange={handleInputChange}\r\n          onSelect={handleSelect}\r\n          inputProps={{\r\n            className: 'autocomplete-input',\r\n          }}\r\n          wrapperStyle={{ position: 'relative' }}\r\n        />\r\n      </div>\r\n\r\n      <div>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Node Name\"\r\n          value={nodeName}\r\n          onChange={(e) => setNodeName(e.target.value)}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Image URL\"\r\n          value={nodeImage}\r\n          onChange={(e) => setNodeImage(e.target.value)}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Description\"\r\n          value={nodeDescription}\r\n          onChange={(e) => setNodeDescription(e.target.value)}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Notes\"\r\n          value={nodeNotes}\r\n          onChange={(e) => setNodeNotes(e.target.value)}\r\n        />\r\n\r\n        {/* Pulsante di aggiornamento del nodo */}\r\n        <button onClick={handleUpdate} className=\"btn-update\">Update Node</button>\r\n\r\n        <div className=\"description\">\r\n          You can drag these nodes to the pane on the right.\r\n        </div>\r\n\r\n        <div className=\"dropdown\">\r\n          <label>Node Type:</label>\r\n          <select\r\n            onChange={(e) => setNodeType(e.target.value)}\r\n            value={nodeType}\r\n          >\r\n            <option value=\"input\">Input Node</option>\r\n            <option value=\"default\">Default Node</option>\r\n            <option value=\"output\">Output Node</option>\r\n          </select>\r\n        </div>\r\n        <div\r\n          className=\"dndnode\"\r\n          onDragStart={onDragStart}\r\n          draggable\r\n          style={{\r\n            padding: \"10px\",\r\n            border: \"1px solid #ccc\",\r\n            margin: \"5px\",\r\n            cursor: \"grab\",\r\n          }}\r\n        >\r\n          Custom Node\r\n        </div>\r\n      </div>\r\n    </aside>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}