{"ast":null,"code":"var _jsxFileName = \"/Users/veronicapuddu/Downloads/React-flow-edit-node-youtube-main/src/DragDrop/sidebar.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default _s(({\n  onAddNode\n}) => {\n  _s();\n  const [selectedType, setSelectedType] = useState('input'); // Stato per il tipo di nodo selezionato\n  const [nodeName, setNodeName] = useState('');\n  const [nodeImage, setNodeImage] = useState('');\n  const [nodeNotes, setNodeNotes] = useState('');\n  const onDragStart = event => {\n    event.dataTransfer.setData('application/reactflow', JSON.stringify({\n      type: selectedType,\n      name: nodeName,\n      image: nodeImage,\n      notes: nodeNotes\n    }));\n    event.dataTransfer.effectAllowed = 'move';\n  };\n  const handleAddNode = () => {\n    if (nodeName) {\n      onDragStart(new Event('dragstart')); // Trigger the drag start event\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"aside\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"description\",\n      children: \"You can drag these nodes to the pane on the right.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      onChange: e => setSelectedType(e.target.value),\n      value: selectedType,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"input\",\n        children: \"Input Node\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"default\",\n        children: \"Default Node\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"output\",\n        children: \"Output Node\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Node Name\",\n        value: nodeName,\n        onChange: e => setNodeName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Image URL\",\n        value: nodeImage,\n        onChange: e => setNodeImage(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Notes\",\n        value: nodeNotes,\n        onChange: e => setNodeNotes(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleAddNode,\n        children: \"Add Node\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dndnode input\",\n      onDragStart: onDragStart,\n      draggable: true,\n      children: \"Input Node\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dndnode\",\n      onDragStart: onDragStart,\n      draggable: true,\n      children: \"Default Node\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dndnode output\",\n      onDragStart: onDragStart,\n      draggable: true,\n      children: \"Output Node\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}, \"i60ZvrAKdOYuczlci9xuBoBuimE=\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","_s","onAddNode","selectedType","setSelectedType","nodeName","setNodeName","nodeImage","setNodeImage","nodeNotes","setNodeNotes","onDragStart","event","dataTransfer","setData","JSON","stringify","type","name","image","notes","effectAllowed","handleAddNode","Event","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onChange","e","target","value","placeholder","onClick","draggable"],"sources":["/Users/veronicapuddu/Downloads/React-flow-edit-node-youtube-main/src/DragDrop/sidebar.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nexport default ({ onAddNode }) => {\r\n  const [selectedType, setSelectedType] = useState('input'); // Stato per il tipo di nodo selezionato\r\n  const [nodeName, setNodeName] = useState('');\r\n  const [nodeImage, setNodeImage] = useState('');\r\n  const [nodeNotes, setNodeNotes] = useState('');\r\n\r\n  const onDragStart = (event) => {\r\n    event.dataTransfer.setData('application/reactflow', JSON.stringify({ type: selectedType, name: nodeName, image: nodeImage, notes: nodeNotes }));\r\n    event.dataTransfer.effectAllowed = 'move';\r\n  };\r\n\r\n  const handleAddNode = () => {\r\n    if (nodeName) {\r\n      onDragStart(new Event('dragstart')); // Trigger the drag start event\r\n    }\r\n  };\r\n\r\n  return (\r\n    <aside>\r\n      <div className=\"description\">You can drag these nodes to the pane on the right.</div>\r\n      \r\n      {/* Selettore per il tipo di nodo */}\r\n      <select onChange={(e) => setSelectedType(e.target.value)} value={selectedType}>\r\n        <option value=\"input\">Input Node</option>\r\n        <option value=\"default\">Default Node</option>\r\n        <option value=\"output\">Output Node</option>\r\n      </select>\r\n\r\n      <div>\r\n        <input \r\n          type=\"text\" \r\n          placeholder=\"Node Name\" \r\n          value={nodeName} \r\n          onChange={(e) => setNodeName(e.target.value)} \r\n        />\r\n        <input \r\n          type=\"text\" \r\n          placeholder=\"Image URL\" \r\n          value={nodeImage} \r\n          onChange={(e) => setNodeImage(e.target.value)} \r\n        />\r\n        <input \r\n          type=\"text\" \r\n          placeholder=\"Notes\" \r\n          value={nodeNotes} \r\n          onChange={(e) => setNodeNotes(e.target.value)} \r\n        />\r\n        <button onClick={handleAddNode}>Add Node</button>\r\n      </div>\r\n\r\n      <div className=\"dndnode input\" onDragStart={onDragStart} draggable>\r\n        Input Node\r\n      </div>\r\n      <div className=\"dndnode\" onDragStart={onDragStart} draggable>\r\n        Default Node\r\n      </div>\r\n      <div className=\"dndnode output\" onDragStart={onDragStart} draggable>\r\n        Output Node\r\n      </div>\r\n    </aside>\r\n  );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}