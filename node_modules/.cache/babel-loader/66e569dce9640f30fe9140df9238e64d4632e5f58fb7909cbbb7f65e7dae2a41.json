{"ast":null,"code":"var _jsxFileName = \"/Users/veronicapuddu/Downloads/React-flow-edit-node-youtube-main/src/CustomNodes/CustomNode.js\";\nimport React from 'react';\nimport { Handle } from 'reactflow';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CustomNode = ({\n  data\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '10px',\n      border: '1px solid black',\n      borderRadius: '5px',\n      backgroundColor: '#f9f9f9',\n      width: '150px',\n      textAlign: 'center'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n      children: data.label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this), data.image && /*#__PURE__*/_jsxDEV(\"img\", {\n      src: data.image,\n      alt: data.label,\n      style: {\n        width: '100%',\n        height: 'auto',\n        borderRadius: '5px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }, this), data.notes && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: data.notes\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 22\n    }, this), data.nodeType === 'input' && /*#__PURE__*/_jsxDEV(Handle, {\n      type: \"source\",\n      position: \"bottom\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this), data.nodeType === 'output' && /*#__PURE__*/_jsxDEV(Handle, {\n      type: \"target\",\n      position: \"top\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this), data.nodeType === 'default' && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Handle, {\n        type: \"target\",\n        position: \"top\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Handle, {\n        type: \"source\",\n        position: \"bottom\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n};\n_c = CustomNode;\nexport default CustomNode;\nvar _c;\n$RefreshReg$(_c, \"CustomNode\");","map":{"version":3,"names":["React","Handle","jsxDEV","_jsxDEV","Fragment","_Fragment","CustomNode","data","style","padding","border","borderRadius","backgroundColor","width","textAlign","children","label","fileName","_jsxFileName","lineNumber","columnNumber","image","src","alt","height","notes","nodeType","type","position","_c","$RefreshReg$"],"sources":["/Users/veronicapuddu/Downloads/React-flow-edit-node-youtube-main/src/CustomNodes/CustomNode.js"],"sourcesContent":["import React from 'react';\nimport { Handle } from 'reactflow';\n\nconst CustomNode = ({ data }) => {\n  return (\n    <div style={{ \n      padding: '10px', \n      border: '1px solid black', \n      borderRadius: '5px', \n      backgroundColor: '#f9f9f9', \n      width: '150px',\n      textAlign: 'center',\n    }}>\n      <strong>{data.label}</strong>\n      {data.image && (\n        <img \n          src={data.image} \n          alt={data.label} \n          style={{ \n            width: '100%', \n            height: 'auto', \n            borderRadius: '5px' \n          }} \n        />\n      )}\n      {data.notes && <p>{data.notes}</p>}\n\n      {/* Aggiungi punti di connessione in base al tipo di nodo */}\n      {data.nodeType === 'input' && (\n        <Handle type=\"source\" position=\"bottom\" />\n      )}\n      {data.nodeType === 'output' && (\n        <Handle type=\"target\" position=\"top\" />\n      )}\n      {data.nodeType === 'default' && (\n        <>\n          <Handle type=\"target\" position=\"top\" />\n          <Handle type=\"source\" position=\"bottom\" />\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default CustomNode;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM,QAAQ,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEnC,MAAMC,UAAU,GAAGA,CAAC;EAAEC;AAAK,CAAC,KAAK;EAC/B,oBACEJ,OAAA;IAAKK,KAAK,EAAE;MACVC,OAAO,EAAE,MAAM;MACfC,MAAM,EAAE,iBAAiB;MACzBC,YAAY,EAAE,KAAK;MACnBC,eAAe,EAAE,SAAS;MAC1BC,KAAK,EAAE,OAAO;MACdC,SAAS,EAAE;IACb,CAAE;IAAAC,QAAA,gBACAZ,OAAA;MAAAY,QAAA,EAASR,IAAI,CAACS;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAS,CAAC,EAC5Bb,IAAI,CAACc,KAAK,iBACTlB,OAAA;MACEmB,GAAG,EAAEf,IAAI,CAACc,KAAM;MAChBE,GAAG,EAAEhB,IAAI,CAACS,KAAM;MAChBR,KAAK,EAAE;QACLK,KAAK,EAAE,MAAM;QACbW,MAAM,EAAE,MAAM;QACdb,YAAY,EAAE;MAChB;IAAE;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CACF,EACAb,IAAI,CAACkB,KAAK,iBAAItB,OAAA;MAAAY,QAAA,EAAIR,IAAI,CAACkB;IAAK;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAGjCb,IAAI,CAACmB,QAAQ,KAAK,OAAO,iBACxBvB,OAAA,CAACF,MAAM;MAAC0B,IAAI,EAAC,QAAQ;MAACC,QAAQ,EAAC;IAAQ;MAAAX,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAC1C,EACAb,IAAI,CAACmB,QAAQ,KAAK,QAAQ,iBACzBvB,OAAA,CAACF,MAAM;MAAC0B,IAAI,EAAC,QAAQ;MAACC,QAAQ,EAAC;IAAK;MAAAX,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CACvC,EACAb,IAAI,CAACmB,QAAQ,KAAK,SAAS,iBAC1BvB,OAAA,CAAAE,SAAA;MAAAU,QAAA,gBACEZ,OAAA,CAACF,MAAM;QAAC0B,IAAI,EAAC,QAAQ;QAACC,QAAQ,EAAC;MAAK;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACvCjB,OAAA,CAACF,MAAM;QAAC0B,IAAI,EAAC,QAAQ;QAACC,QAAQ,EAAC;MAAQ;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA,eAC1C,CACH;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACS,EAAA,GAvCIvB,UAAU;AAyChB,eAAeA,UAAU;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}