{"ast":null,"code":"var _jsxFileName = \"/Users/veronicapuddu/Downloads/React-flow-edit-node-youtube-main/src/DragDrop/DnDFlow.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useCallback } from 'react';\nimport ReactFlow, { addEdge, useNodesState, useEdgesState, Controls, Background, ReactFlowProvider } from 'reactflow';\nimport 'reactflow/dist/style.css';\nimport Sidebar from './sidebar';\nimport './style.css';\nimport CustomNode from '../CustomNodes/CustomNode';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialNodes = [{\n  id: '1',\n  type: 'input',\n  data: {\n    label: 'Input Node'\n  },\n  position: {\n    x: 250,\n    y: 5\n  }\n}];\nconst nodeTypes = {\n  customNode: CustomNode\n};\nlet id = 0;\nconst getId = () => `dndnode_${id++}`;\nconst DnDFlow = () => {\n  _s();\n  const reactFlowWrapper = useRef(null);\n  const [nodes, setNodes, onNodesChange] = useNodesState(initialNodes);\n  const [edges, setEdges, onEdgesChange] = useEdgesState([]);\n  const [reactFlowInstance, setReactFlowInstance] = useState(null);\n  const onConnect = useCallback(params => setEdges(eds => addEdge(params, eds)), []);\n  const onDragOver = useCallback(event => {\n    event.preventDefault();\n    event.dataTransfer.dropEffect = 'move';\n  }, []);\n  const onDrop = useCallback(event => {\n    event.preventDefault();\n    const reactFlowBounds = reactFlowWrapper.current.getBoundingClientRect();\n    const nodeData = JSON.parse(event.dataTransfer.getData('application/reactflow'));\n    if (!nodeData) {\n      return;\n    }\n    const position = reactFlowInstance.project({\n      x: event.clientX - reactFlowBounds.left,\n      y: event.clientY - reactFlowBounds.top\n    });\n    const newNode = {\n      id: getId(),\n      type: nodeData.type,\n      position,\n      data: {\n        label: nodeData.name || `${nodeData.type} node`,\n        image: nodeData.image,\n        // Assicurati che l'immagine venga impostata\n        notes: nodeData.notes // Assicurati che le note vengano impostate\n      }\n    };\n    setNodes(nds => nds.concat(newNode));\n  }, [reactFlowInstance]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dndflow\",\n    children: /*#__PURE__*/_jsxDEV(ReactFlowProvider, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"reactflow-wrapper\",\n        ref: reactFlowWrapper,\n        children: /*#__PURE__*/_jsxDEV(ReactFlow, {\n          nodes: nodes,\n          edges: edges,\n          onNodesChange: onNodesChange,\n          onEdgesChange: onEdgesChange,\n          onConnect: onConnect,\n          onInit: setReactFlowInstance,\n          onDrop: onDrop,\n          onDragOver: onDragOver,\n          fitView: true,\n          nodeTypes: {\n            custom: CustomNode\n          },\n          children: [/*#__PURE__*/_jsxDEV(Background, {\n            color: \"#99b3ec\",\n            variant: \"lines\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Controls, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Sidebar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n_s(DnDFlow, \"s1hu1oC/LcvmYaDaAbQjcY1Q9fQ=\", false, function () {\n  return [useNodesState, useEdgesState];\n});\n_c = DnDFlow;\nexport default DnDFlow;\nvar _c;\n$RefreshReg$(_c, \"DnDFlow\");","map":{"version":3,"names":["React","useState","useRef","useCallback","ReactFlow","addEdge","useNodesState","useEdgesState","Controls","Background","ReactFlowProvider","Sidebar","CustomNode","jsxDEV","_jsxDEV","initialNodes","id","type","data","label","position","x","y","nodeTypes","customNode","getId","DnDFlow","_s","reactFlowWrapper","nodes","setNodes","onNodesChange","edges","setEdges","onEdgesChange","reactFlowInstance","setReactFlowInstance","onConnect","params","eds","onDragOver","event","preventDefault","dataTransfer","dropEffect","onDrop","reactFlowBounds","current","getBoundingClientRect","nodeData","JSON","parse","getData","project","clientX","left","clientY","top","newNode","name","image","notes","nds","concat","className","children","ref","onInit","fitView","custom","color","variant","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/veronicapuddu/Downloads/React-flow-edit-node-youtube-main/src/DragDrop/DnDFlow.js"],"sourcesContent":["import React, { useState, useRef, useCallback } from 'react';\r\nimport ReactFlow, {\r\n  addEdge,\r\n  useNodesState,\r\n  useEdgesState,\r\n  Controls,\r\n  Background,\r\n  ReactFlowProvider,\r\n} from 'reactflow';\r\nimport 'reactflow/dist/style.css';\r\nimport Sidebar from './sidebar';\r\n\r\nimport './style.css';\r\nimport CustomNode from '../CustomNodes/CustomNode';\r\n\r\nconst initialNodes = [\r\n  {\r\n    id: '1',\r\n    type: 'input',\r\n    data: { label: 'Input Node' },\r\n    position: { x: 250, y: 5 },\r\n  },\r\n];\r\n\r\nconst nodeTypes = {\r\n  customNode: CustomNode,\r\n};\r\n\r\nlet id = 0;\r\nconst getId = () => `dndnode_${id++}`;\r\n\r\nconst DnDFlow = () => {\r\n  const reactFlowWrapper = useRef(null);\r\n  const [nodes, setNodes, onNodesChange] = useNodesState(initialNodes);\r\n  const [edges, setEdges, onEdgesChange] = useEdgesState([]);\r\n  const [reactFlowInstance, setReactFlowInstance] = useState(null);\r\n\r\n  const onConnect = useCallback((params) => setEdges((eds) => addEdge(params, eds)), []);\r\n\r\n  const onDragOver = useCallback((event) => {\r\n    event.preventDefault();\r\n    event.dataTransfer.dropEffect = 'move';\r\n  }, []);\r\n\r\n  const onDrop = useCallback(\r\n    (event) => {\r\n      event.preventDefault();\r\n\r\n      const reactFlowBounds = reactFlowWrapper.current.getBoundingClientRect();\r\n      const nodeData = JSON.parse(event.dataTransfer.getData('application/reactflow'));\r\n\r\n      if (!nodeData) {\r\n        return;\r\n      }\r\n\r\n      const position = reactFlowInstance.project({\r\n        x: event.clientX - reactFlowBounds.left,\r\n        y: event.clientY - reactFlowBounds.top,\r\n      });\r\n\r\n      const newNode = {\r\n        id: getId(),\r\n        type: nodeData.type,\r\n        position,\r\n        data: {\r\n          label: nodeData.name || `${nodeData.type} node`,\r\n          image: nodeData.image, // Assicurati che l'immagine venga impostata\r\n          notes: nodeData.notes,  // Assicurati che le note vengano impostate\r\n        },\r\n      };\r\n\r\n      setNodes((nds) => nds.concat(newNode));\r\n    },\r\n    [reactFlowInstance]\r\n  );\r\n\r\n  return (\r\n    <div className=\"dndflow\">\r\n      <ReactFlowProvider>\r\n        <div className=\"reactflow-wrapper\" ref={reactFlowWrapper}>\r\n          <ReactFlow\r\n            nodes={nodes}\r\n            edges={edges}\r\n            onNodesChange={onNodesChange}\r\n            onEdgesChange={onEdgesChange}\r\n            onConnect={onConnect}\r\n            onInit={setReactFlowInstance}\r\n            onDrop={onDrop}\r\n            onDragOver={onDragOver}\r\n            fitView\r\n            nodeTypes={{ custom: CustomNode }}\r\n          >\r\n            <Background color=\"#99b3ec\" variant=\"lines\" />\r\n            <Controls />\r\n          </ReactFlow>\r\n        </div>\r\n        <Sidebar />\r\n      </ReactFlowProvider>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DnDFlow;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}