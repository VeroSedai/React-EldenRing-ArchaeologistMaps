{"ast":null,"code":"var _jsxFileName = \"/Users/veronicapuddu/Downloads/React-flow-edit-node-youtube-main/src/DragDrop/sidebar.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { GraphQLClient, gql } from 'graphql-request';\nimport Autocomplete from 'react-autocomplete';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst client = new GraphQLClient('https://eldenring.fanapis.com/api/graphql');\n\n// Definisci le query dinamiche per diversi tipi di oggetti\nconst QUERIES = {\n  weapon: gql`\n    query SearchItems($name: String!) {\n      weapon(name: $name) {\n        id\n        name\n        image\n        description\n      }\n    }\n  `,\n  shield: gql`\n    query SearchItems($name: String!) {\n      shield(name: $name) {\n        id\n        name\n        image\n        description\n      }\n    }\n  `,\n  npc: gql`\n    query SearchItems($name: String!) {\n      npc(name: $name) {\n        data {\n          id\n          name\n          image\n          description\n        }\n      }\n    }\n  `,\n  armor: gql`\n    query SearchItems($name: String!) {\n      armor(name: $name) {\n        data {\n          id\n          name\n          image\n          description\n        }\n      }\n    }\n  `,\n  boss: gql`\n    query SearchItems($name: String!) {\n      bosses(name: $name) {\n        id\n        name\n        image\n        description\n      }\n    }\n  `\n  // Aggiungi altre query per altre categorie come talisman, spirit, ecc.\n};\nconst Sidebar = ({\n  onDragStart\n}) => {\n  _s();\n  const [searchValue, setSearchValue] = useState('');\n  const [suggestions, setSuggestions] = useState([]);\n  const [selectedItem, setSelectedItem] = useState(null);\n  const [itemType, setItemType] = useState('weapon'); // Default type\n\n  // Funzione per cercare gli elementi tramite GraphQL, cambia la query in base al tipo selezionato\n  const fetchItems = async name => {\n    try {\n      const response = await client.request(QUERIES[itemType], {\n        name\n      });\n      const results = response[`${itemType}s`].data; // Access the correct data array (e.g., weapons, shields, npcs)\n      setSuggestions(results);\n    } catch (error) {\n      console.error('Errore nel recupero dei dati:', error);\n    }\n  };\n\n  // Funzione per aggiornare i suggerimenti durante la digitazione\n  const handleInputChange = e => {\n    const value = e.target.value;\n    setSearchValue(value);\n    if (value.length > 2) {\n      fetchItems(value);\n    }\n  };\n\n  // Funzione per gestire la selezione di un oggetto\n  const handleSelect = val => {\n    const selected = suggestions.find(item => item.name === val);\n    setSelectedItem(selected);\n    setSearchValue(val);\n  };\n\n  // Funzione per gestire il cambio di tipo di oggetto\n  const handleTypeChange = e => {\n    setItemType(e.target.value);\n    setSuggestions([]); // Resetta i suggerimenti\n    setSearchValue(''); // Resetta il valore di ricerca\n    setSelectedItem(null); // Resetta l'elemento selezionato\n  };\n  return /*#__PURE__*/_jsxDEV(\"aside\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"description\",\n      children: \"Puoi trascinare i nodi a destra.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dropdown\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Item Type:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: itemType,\n        onChange: handleTypeChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"weapon\",\n          children: \"Weapon\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"shield\",\n          children: \"Shield\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"npc\",\n          children: \"NPC\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"armor\",\n          children: \"Armor\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"boss\",\n          children: \"Boss\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"autocomplete\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Search Item:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Autocomplete, {\n        getItemValue: item => item.name,\n        items: suggestions,\n        renderItem: (item, isHighlighted) => /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            background: isHighlighted ? '#eee' : 'transparent'\n          },\n          children: item.name\n        }, item.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 13\n        }, this),\n        value: searchValue,\n        onChange: handleInputChange,\n        onSelect: handleSelect\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this), selectedItem && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dndnode custom\",\n      onDragStart: event => onDragStart(event, 'custom', selectedItem),\n      draggable: true,\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: selectedItem.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: selectedItem.image,\n        alt: selectedItem.name,\n        style: {\n          width: '100px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: selectedItem.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dndnode input\",\n      onDragStart: event => onDragStart(event, 'input'),\n      draggable: true,\n      children: \"Input Node\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dndnode default\",\n      onDragStart: event => onDragStart(event, 'default'),\n      draggable: true,\n      children: \"Default Node\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dndnode output\",\n      onDragStart: event => onDragStart(event, 'output'),\n      draggable: true,\n      children: \"Output Node\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 5\n  }, this);\n};\n_s(Sidebar, \"V8dTrEqI1L/VinHjkMx8xOKNJjM=\");\n_c = Sidebar;\nexport default Sidebar;\nvar _c;\n$RefreshReg$(_c, \"Sidebar\");","map":{"version":3,"names":["React","useState","GraphQLClient","gql","Autocomplete","jsxDEV","_jsxDEV","client","QUERIES","weapon","shield","npc","armor","boss","Sidebar","onDragStart","_s","searchValue","setSearchValue","suggestions","setSuggestions","selectedItem","setSelectedItem","itemType","setItemType","fetchItems","name","response","request","results","data","error","console","handleInputChange","e","value","target","length","handleSelect","val","selected","find","item","handleTypeChange","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onChange","getItemValue","items","renderItem","isHighlighted","style","background","id","onSelect","event","draggable","src","image","alt","width","description","_c","$RefreshReg$"],"sources":["/Users/veronicapuddu/Downloads/React-flow-edit-node-youtube-main/src/DragDrop/sidebar.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { GraphQLClient, gql } from 'graphql-request';\r\nimport Autocomplete from 'react-autocomplete';\r\n\r\nconst client = new GraphQLClient('https://eldenring.fanapis.com/api/graphql');\r\n\r\n// Definisci le query dinamiche per diversi tipi di oggetti\r\nconst QUERIES = {\r\n  weapon: gql`\r\n    query SearchItems($name: String!) {\r\n      weapon(name: $name) {\r\n        id\r\n        name\r\n        image\r\n        description\r\n      }\r\n    }\r\n  `,\r\n  shield: gql`\r\n    query SearchItems($name: String!) {\r\n      shield(name: $name) {\r\n        id\r\n        name\r\n        image\r\n        description\r\n      }\r\n    }\r\n  `,\r\n  npc: gql`\r\n    query SearchItems($name: String!) {\r\n      npc(name: $name) {\r\n        data {\r\n          id\r\n          name\r\n          image\r\n          description\r\n        }\r\n      }\r\n    }\r\n  `,\r\n  armor: gql`\r\n    query SearchItems($name: String!) {\r\n      armor(name: $name) {\r\n        data {\r\n          id\r\n          name\r\n          image\r\n          description\r\n        }\r\n      }\r\n    }\r\n  `,\r\n  boss: gql`\r\n    query SearchItems($name: String!) {\r\n      bosses(name: $name) {\r\n        id\r\n        name\r\n        image\r\n        description\r\n      }\r\n    }\r\n  `,\r\n  // Aggiungi altre query per altre categorie come talisman, spirit, ecc.\r\n};\r\n\r\nconst Sidebar = ({ onDragStart }) => {\r\n  const [searchValue, setSearchValue] = useState('');\r\n  const [suggestions, setSuggestions] = useState([]);\r\n  const [selectedItem, setSelectedItem] = useState(null);\r\n  const [itemType, setItemType] = useState('weapon'); // Default type\r\n\r\n  // Funzione per cercare gli elementi tramite GraphQL, cambia la query in base al tipo selezionato\r\n  const fetchItems = async (name) => {\r\n    try {\r\n      const response = await client.request(QUERIES[itemType], { name });\r\n      const results = response[`${itemType}s`].data; // Access the correct data array (e.g., weapons, shields, npcs)\r\n      setSuggestions(results);\r\n    } catch (error) {\r\n      console.error('Errore nel recupero dei dati:', error);\r\n    }\r\n  };\r\n\r\n  // Funzione per aggiornare i suggerimenti durante la digitazione\r\n  const handleInputChange = (e) => {\r\n    const value = e.target.value;\r\n    setSearchValue(value);\r\n    if (value.length > 2) {\r\n      fetchItems(value);\r\n    }\r\n  };\r\n\r\n  // Funzione per gestire la selezione di un oggetto\r\n  const handleSelect = (val) => {\r\n    const selected = suggestions.find((item) => item.name === val);\r\n    setSelectedItem(selected);\r\n    setSearchValue(val);\r\n  };\r\n\r\n  // Funzione per gestire il cambio di tipo di oggetto\r\n  const handleTypeChange = (e) => {\r\n    setItemType(e.target.value);\r\n    setSuggestions([]); // Resetta i suggerimenti\r\n    setSearchValue(''); // Resetta il valore di ricerca\r\n    setSelectedItem(null); // Resetta l'elemento selezionato\r\n  };\r\n\r\n  return (\r\n    <aside>\r\n      <div className=\"description\">Puoi trascinare i nodi a destra.</div>\r\n\r\n      {/* Dropdown per selezionare il tipo di oggetto */}\r\n      <div className=\"dropdown\">\r\n        <label>Item Type:</label>\r\n        <select value={itemType} onChange={handleTypeChange}>\r\n          <option value=\"weapon\">Weapon</option>\r\n          <option value=\"shield\">Shield</option>\r\n          <option value=\"npc\">NPC</option>\r\n          <option value=\"armor\">Armor</option>\r\n          <option value=\"boss\">Boss</option>\r\n          {/* Aggiungi altre opzioni per gli altri tipi */}\r\n        </select>\r\n      </div>\r\n\r\n      {/* Campo di autocompletamento */}\r\n      <div className=\"autocomplete\">\r\n        <label>Search Item:</label>\r\n        <Autocomplete\r\n          getItemValue={(item) => item.name}\r\n          items={suggestions}\r\n          renderItem={(item, isHighlighted) => (\r\n            <div key={item.id} style={{ background: isHighlighted ? '#eee' : 'transparent' }}>\r\n              {item.name}\r\n            </div>\r\n          )}\r\n          value={searchValue}\r\n          onChange={handleInputChange}\r\n          onSelect={handleSelect}\r\n        />\r\n      </div>\r\n\r\n      {/* Selezione dell'elemento per il drag and drop */}\r\n      {selectedItem && (\r\n        <div\r\n          className=\"dndnode custom\"\r\n          onDragStart={(event) => onDragStart(event, 'custom', selectedItem)}\r\n          draggable\r\n        >\r\n          <p>{selectedItem.name}</p>\r\n          <img src={selectedItem.image} alt={selectedItem.name} style={{ width: '100px' }} />\r\n          <p>{selectedItem.description}</p>\r\n        </div>\r\n      )}\r\n\r\n      {/* Nodi predefiniti per input, default e output */}\r\n      <div className=\"dndnode input\" onDragStart={(event) => onDragStart(event, 'input')} draggable>\r\n        Input Node\r\n      </div>\r\n      <div className=\"dndnode default\" onDragStart={(event) => onDragStart(event, 'default')} draggable>\r\n        Default Node\r\n      </div>\r\n      <div className=\"dndnode output\" onDragStart={(event) => onDragStart(event, 'output')} draggable>\r\n        Output Node\r\n      </div>\r\n    </aside>\r\n  );\r\n};\r\n\r\nexport default Sidebar;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}