{"ast":null,"code":"var _jsxFileName = \"/Users/veronicapuddu/Downloads/React-flow-edit-node-youtube-main/src/CustomNodes/CustomNode.js\";\nimport React from 'react';\nimport { Handle } from 'reactflow';\nimport './customNode.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CustomNode = ({\n  data\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"custom-node\",\n    children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n      className: \"custom-node-label\",\n      children: data.label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this), data.image && /*#__PURE__*/_jsxDEV(\"img\", {\n      src: data.image,\n      alt: data.label,\n      className: \"custom-node-image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }, this), data.description && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"custom-node-description\",\n      children: data.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 28\n    }, this), data.notes && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"custom-node-notes\",\n      children: data.notes\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 22\n    }, this), data.nodeType === 'input' && /*#__PURE__*/_jsxDEV(Handle, {\n      type: \"source\",\n      position: \"bottom\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }, this), data.nodeType === 'output' && /*#__PURE__*/_jsxDEV(Handle, {\n      type: \"target\",\n      position: \"top\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this), data.nodeType === 'default' && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Handle, {\n        type: \"target\",\n        position: \"top\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Handle, {\n        type: \"source\",\n        position: \"bottom\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n};\n_c = CustomNode;\nexport default CustomNode;\nvar _c;\n$RefreshReg$(_c, \"CustomNode\");","map":{"version":3,"names":["React","Handle","jsxDEV","_jsxDEV","Fragment","_Fragment","CustomNode","data","className","children","label","fileName","_jsxFileName","lineNumber","columnNumber","image","src","alt","description","notes","nodeType","type","position","_c","$RefreshReg$"],"sources":["/Users/veronicapuddu/Downloads/React-flow-edit-node-youtube-main/src/CustomNodes/CustomNode.js"],"sourcesContent":["import React from 'react';\nimport { Handle } from 'reactflow';\nimport './customNode.css';\n\nconst CustomNode = ({ data }) => {\n  return (\n    <div className=\"custom-node\">\n      <strong className=\"custom-node-label\">{data.label}</strong>\n      {data.image && (\n        <img \n          src={data.image} \n          alt={data.label} \n          className=\"custom-node-image\" \n        />\n      )}\n      {data.description && <p className=\"custom-node-description\">{data.description}</p>}\n      {data.notes && <p className=\"custom-node-notes\">{data.notes}</p>}\n\n      {/* Aggiungi punti di connessione in base al tipo di nodo */}\n      {data.nodeType === 'input' && (\n        <Handle type=\"source\" position=\"bottom\" />\n      )}\n      {data.nodeType === 'output' && (\n        <Handle type=\"target\" position=\"top\" />\n      )}\n      {data.nodeType === 'default' && (\n        <>\n          <Handle type=\"target\" position=\"top\" />\n          <Handle type=\"source\" position=\"bottom\" />\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default CustomNode;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM,QAAQ,WAAW;AAClC,OAAO,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE1B,MAAMC,UAAU,GAAGA,CAAC;EAAEC;AAAK,CAAC,KAAK;EAC/B,oBACEJ,OAAA;IAAKK,SAAS,EAAC,aAAa;IAAAC,QAAA,gBAC1BN,OAAA;MAAQK,SAAS,EAAC,mBAAmB;MAAAC,QAAA,EAAEF,IAAI,CAACG;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAS,CAAC,EAC1DP,IAAI,CAACQ,KAAK,iBACTZ,OAAA;MACEa,GAAG,EAAET,IAAI,CAACQ,KAAM;MAChBE,GAAG,EAAEV,IAAI,CAACG,KAAM;MAChBF,SAAS,EAAC;IAAmB;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9B,CACF,EACAP,IAAI,CAACW,WAAW,iBAAIf,OAAA;MAAGK,SAAS,EAAC,yBAAyB;MAAAC,QAAA,EAAEF,IAAI,CAACW;IAAW;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACjFP,IAAI,CAACY,KAAK,iBAAIhB,OAAA;MAAGK,SAAS,EAAC,mBAAmB;MAAAC,QAAA,EAAEF,IAAI,CAACY;IAAK;MAAAR,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAG/DP,IAAI,CAACa,QAAQ,KAAK,OAAO,iBACxBjB,OAAA,CAACF,MAAM;MAACoB,IAAI,EAAC,QAAQ;MAACC,QAAQ,EAAC;IAAQ;MAAAX,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAC1C,EACAP,IAAI,CAACa,QAAQ,KAAK,QAAQ,iBACzBjB,OAAA,CAACF,MAAM;MAACoB,IAAI,EAAC,QAAQ;MAACC,QAAQ,EAAC;IAAK;MAAAX,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CACvC,EACAP,IAAI,CAACa,QAAQ,KAAK,SAAS,iBAC1BjB,OAAA,CAAAE,SAAA;MAAAI,QAAA,gBACEN,OAAA,CAACF,MAAM;QAACoB,IAAI,EAAC,QAAQ;QAACC,QAAQ,EAAC;MAAK;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACvCX,OAAA,CAACF,MAAM;QAACoB,IAAI,EAAC,QAAQ;QAACC,QAAQ,EAAC;MAAQ;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA,eAC1C,CACH;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACS,EAAA,GA7BIjB,UAAU;AA+BhB,eAAeA,UAAU;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}