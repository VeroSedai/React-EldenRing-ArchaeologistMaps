{"ast":null,"code":"var _jsxFileName = \"/Users/veronicapuddu/Downloads/React-flow-edit-node-youtube-main/src/DragDrop/sidebar.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default _s(() => {\n  _s();\n  const [selectedNodeType, setSelectedNodeType] = useState('input');\n  const [nodeName, setNodeName] = useState(''); // Stato per il nome del nodo\n  const [nodeNotes, setNodeNotes] = useState(''); // Stato per le note del nodo\n  const [nodeImage, setNodeImage] = useState(''); // Stato per l'immagine del nodo\n\n  const onDragStart = event => {\n    const nodeData = {\n      type: selectedNodeType,\n      name: nodeName,\n      notes: nodeNotes,\n      image: nodeImage\n    };\n    event.dataTransfer.setData('application/reactflow', JSON.stringify(nodeData));\n    event.dataTransfer.effectAllowed = 'move';\n  };\n  const handleNodeTypeChange = event => {\n    setSelectedNodeType(event.target.value);\n  };\n  const handleNameChange = event => {\n    setNodeName(event.target.value);\n  };\n  const handleNotesChange = event => {\n    setNodeNotes(event.target.value);\n  };\n  const handleImageChange = event => {\n    setNodeImage(event.target.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"aside\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"description\",\n      children: \"You can drag these nodes to the pane on the right.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"node-selector\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"node-type\",\n        children: \"Select Node Type: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"node-type\",\n        value: selectedNodeType,\n        onChange: handleNodeTypeChange,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"input\",\n          children: \"Input Node\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"default\",\n          children: \"Default Node\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"output\",\n          children: \"Output Node\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"customization\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"node-name\",\n        children: \"Node Name: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"node-name\",\n        type: \"text\",\n        value: nodeName,\n        onChange: handleNameChange,\n        placeholder: \"Enter node name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"customization\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"node-notes\",\n        children: \"Notes: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"node-notes\",\n        value: nodeNotes,\n        onChange: handleNotesChange,\n        placeholder: \"Enter notes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"customization\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"node-image\",\n        children: \"Image URL: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"node-image\",\n        type: \"text\",\n        value: nodeImage,\n        onChange: handleImageChange,\n        placeholder: \"Enter image URL\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: `dndnode ${selectedNodeType}`,\n      onDragStart: onDragStart,\n      draggable: true,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: nodeName || `${selectedNodeType.charAt(0).toUpperCase() + selectedNodeType.slice(1)} Node`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), nodeImage && /*#__PURE__*/_jsxDEV(\"img\", {\n        src: nodeImage,\n        alt: nodeName,\n        style: {\n          width: '50px',\n          height: '50px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 23\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}, \"XPBJ2UT/QcNOHIKCmO3IAu78sqY=\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","_s","selectedNodeType","setSelectedNodeType","nodeName","setNodeName","nodeNotes","setNodeNotes","nodeImage","setNodeImage","onDragStart","event","nodeData","type","name","notes","image","dataTransfer","setData","JSON","stringify","effectAllowed","handleNodeTypeChange","target","value","handleNameChange","handleNotesChange","handleImageChange","children","className","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","onChange","placeholder","draggable","charAt","toUpperCase","slice","src","alt","style","width","height"],"sources":["/Users/veronicapuddu/Downloads/React-flow-edit-node-youtube-main/src/DragDrop/sidebar.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nexport default () => {\r\n  const [selectedNodeType, setSelectedNodeType] = useState('input');\r\n  const [nodeName, setNodeName] = useState(''); // Stato per il nome del nodo\r\n  const [nodeNotes, setNodeNotes] = useState(''); // Stato per le note del nodo\r\n  const [nodeImage, setNodeImage] = useState(''); // Stato per l'immagine del nodo\r\n\r\n  const onDragStart = (event) => {\r\n    const nodeData = {\r\n      type: selectedNodeType,\r\n      name: nodeName,\r\n      notes: nodeNotes,\r\n      image: nodeImage,\r\n    };\r\n    event.dataTransfer.setData('application/reactflow', JSON.stringify(nodeData));\r\n    event.dataTransfer.effectAllowed = 'move';\r\n  };\r\n\r\n  const handleNodeTypeChange = (event) => {\r\n    setSelectedNodeType(event.target.value);\r\n  };\r\n\r\n  const handleNameChange = (event) => {\r\n    setNodeName(event.target.value);\r\n  };\r\n\r\n  const handleNotesChange = (event) => {\r\n    setNodeNotes(event.target.value);\r\n  };\r\n\r\n  const handleImageChange = (event) => {\r\n    setNodeImage(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <aside>\r\n      <div className=\"description\">\r\n        You can drag these nodes to the pane on the right.\r\n      </div>\r\n      <div className=\"node-selector\">\r\n        <label htmlFor=\"node-type\">Select Node Type: </label>\r\n        <select id=\"node-type\" value={selectedNodeType} onChange={handleNodeTypeChange}>\r\n          <option value=\"input\">Input Node</option>\r\n          <option value=\"default\">Default Node</option>\r\n          <option value=\"output\">Output Node</option>\r\n        </select>\r\n      </div>\r\n      <div className=\"customization\">\r\n        <label htmlFor=\"node-name\">Node Name: </label>\r\n        <input\r\n          id=\"node-name\"\r\n          type=\"text\"\r\n          value={nodeName}\r\n          onChange={handleNameChange}\r\n          placeholder=\"Enter node name\"\r\n        />\r\n      </div>\r\n      <div className=\"customization\">\r\n        <label htmlFor=\"node-notes\">Notes: </label>\r\n        <textarea\r\n          id=\"node-notes\"\r\n          value={nodeNotes}\r\n          onChange={handleNotesChange}\r\n          placeholder=\"Enter notes\"\r\n        />\r\n      </div>\r\n      <div className=\"customization\">\r\n        <label htmlFor=\"node-image\">Image URL: </label>\r\n        <input\r\n          id=\"node-image\"\r\n          type=\"text\"\r\n          value={nodeImage}\r\n          onChange={handleImageChange}\r\n          placeholder=\"Enter image URL\"\r\n        />\r\n      </div>\r\n      <div\r\n        className={`dndnode ${selectedNodeType}`}\r\n        onDragStart={onDragStart}\r\n        draggable\r\n      >\r\n        <span>{nodeName || `${selectedNodeType.charAt(0).toUpperCase() + selectedNodeType.slice(1)} Node`}</span>\r\n        {nodeImage && <img src={nodeImage} alt={nodeName} style={{ width: '50px', height: '50px' }} />}\r\n      </div>\r\n    </aside>\r\n  );\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}